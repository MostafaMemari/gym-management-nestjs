services:
  ### Gateway ###
  gateway:
    container_name: gateway
    build:
      context: "./gateway"
      dockerfile: Dockerfile
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    env_file:
      - gateway/.env
    networks:
      - app
    volumes:
      - ./gateway/src:/app/src

  ### Auth Service ###
  auth_service:
    container_name: auth_service
    build:
      context: ./auth
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - rabbitmq
    env_file:
      - auth/.env
    volumes:
      - ./auth/src:/app/src

  ### User Service ###
  user_service:
    container_name: user_service
    build:
      context: ./user
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - rabbitmq
    env_file:
      - user/.env
    volumes:
      - ./user/src:/app/src
      - ./user/logs:/app/logs

  ### Notification Service ###
  notification_service:
    container_name: notification_service
    build:
      context: ./notification
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - rabbitmq
      - notification_service_db
    env_file:
      - notification/.env
    volumes:
      - ./notification/src:/app/src

  ### Club Service ###
  club_service:
    container_name: club_service
    build:
      context: ./club
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - rabbitmq
      - club_service_db
    env_file:
      - club/.env
    volumes:
      - ./club/src:/app/src
    
  ### Payment Service ###
  payment_service:
    container_name: payment_service
    build:
      context: ./payment
      dockerfile: Dockerfile
    networks:
      - app
    depends_on:
      - rabbitmq
    env_file:
      - payment/.env
    volumes:
      - ./payment/src:/app/src
    
  ### Redis Insight ###
  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - 5540:5540
    depends_on:
      - redis
    networks:
      - app
    volumes:
      - redisinsight_data:/data

  ### Redis ###
  redis: 
    container_name: redis
    image: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - app  
    volumes:
      - redis_data:/data


  ### Rabbitmq ###
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - app
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  ### User Service DB ###
  user_service_db: 
    container_name: user_service_db
    image: postgres:14.15-alpine3.21
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app
    volumes:
      - user_service_db_data:/var/lib/postgresql/data

  ### Club Service DB ###
  club_service_db: 
    container_name: club_service_db
    image: "mysql/mysql-server:8.0"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - app
    volumes:
      - club_service_db_data:/var/lib/mysql

  ### Notification Service DB ###
  notification_service_db:
    container_name: notification_service_db
    image: mongo:6-jammy
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    networks:
      - app
    volumes:
      - notification_service_db_data:/data/db

  ### PG ADMIN ###
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 4020:80
    depends_on:
      - user_service_db
    networks:
      - app
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  ### Php My Admin ###
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOSTS: ${PMA_HOSTS}
    ports:
      - "8080:80"
    depends_on:
      - club_service_db
    networks:
      - app

  ### Mongo Express ###
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: always
    networks:
      - app
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_URL: mongodb://admin:secret@notification_service_db:27017/
      ME_CONFIG_BASICAUTH: true

volumes:
  rabbitmq_data:
  user_service_db_data:
  pgadmin_data:
  redisinsight_data:
  redis_data:
  club_service_db_data:
  notification_service_db_data:

networks:
  app:
    driver: bridge
